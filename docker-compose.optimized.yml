version: '3.8'

services:
  qdrant:
    image: qdrant/qdrant:latest
    container_name: qdrant-optimized
    ports:
      - "6333:6333"
      - "6334:6334"
    volumes:
      - qdrant_data:/qdrant/storage
      - qdrant_snapshots:/qdrant/snapshots
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__STORAGE__STORAGE_PATH=/qdrant/storage
      - QDRANT__STORAGE__SNAPSHOTS_PATH=/qdrant/snapshots
      # Performance optimizations
      - QDRANT__STORAGE__OPTIMIZERS_CONFIG__DEFAULT_SEGMENT_NUMBER=2
      - QDRANT__STORAGE__OPTIMIZERS_CONFIG__MEMTABLE_THRESHOLD=1000
      - QDRANT__STORAGE__OPTIMIZERS_CONFIG__VACUUM_MIN_VECTOR_NUMBER=1000
      - QDRANT__STORAGE__OPTIMIZERS_CONFIG__MAX_OPTIMIZATION_THREADS=2
      # Memory optimizations
      - QDRANT__STORAGE__PERFORMANCE__MAX_SEARCH_THREADS=4
      - QDRANT__STORAGE__PERFORMANCE__UPDATE_RATE_LIMIT=100
    deploy:
      resources:
        limits:
          memory: 2G
          cpus: '1.0'
        reservations:
          memory: 1G
          cpus: '0.5'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    restart: unless-stopped

  rag-fabric-app:
    build:
      context: .
      dockerfile: Dockerfile.docker.optimized
    container_name: rag-fabric-app-optimized
    ports:
      - "8501:8501"
    environment:
      # Azure AD Configuration
      - AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
      - AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}
      - AZURE_TENANT_ID=${AZURE_TENANT_ID}
      - AZURE_REDIRECT_URI=${AZURE_REDIRECT_URI:-http://localhost:8501/callback}
      - AZURE_SCOPE=${AZURE_SCOPE:-https://analysis.windows.net/powerbi/api/.default}
      
      # OpenAI Configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - DEFAULT_MODEL=${DEFAULT_MODEL:-gpt-3.5-turbo}
      - MAX_TOKENS=${MAX_TOKENS:-600}
      - TEMPERATURE=${TEMPERATURE:-0.2}
      
      # Authorized Users
      - AUTHORIZED_USERS=${AUTHORIZED_USERS:-mawaz@opendata.energy,jaipal@opendata.energy,vikesh@opendata.energy,sudheer@opendata.energy,selva@opendata.energy,ranjana.c@opendata.energy}
      
      # Qdrant Configuration
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - QDRANT_URL=http://qdrant:6333
      
      # Email Configuration
      - EMAIL_USER=${EMAIL_USER}
      - ADMIN_EMAIL=${ADMIN_EMAIL}
      
      # Streamlit Configuration
      - STREAMLIT_SERVER_PORT=8501
      - STREAMLIT_SERVER_ADDRESS=0.0.0.0
      - STREAMLIT_SERVER_HEADLESS=true
      - STREAMLIT_SERVER_ENABLE_CORS=false
      - STREAMLIT_SERVER_ENABLE_XSRF_PROTECTION=false
      - STREAMLIT_BROWSER_GATHER_USAGE_STATS=false
      
      # Performance optimizations
      - STREAMLIT_SERVER_MAX_UPLOAD_SIZE=200
      - STREAMLIT_SERVER_MAX_MESSAGE_SIZE=200
      - STREAMLIT_SERVER_ENABLE_STATIC_SERVING=true
      - STREAMLIT_SERVER_ENABLE_WEBSOCKET_COMPRESSION=false
      
      # Memory optimizations
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - PYTHONHASHSEED=random
      
      # Cache optimizations
      - STREAMLIT_CACHE_TTL=3600
      - STREAMLIT_CACHE_MAX_ENTRIES=1000
    volumes:
      - app_data:/app/data
      - app_cache:/app/cache
      - app_logs:/app/logs
    depends_on:
      - qdrant
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8501/_stcore/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    restart: unless-stopped

volumes:
  qdrant_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/qdrant/data
  qdrant_snapshots:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/qdrant/snapshots
  app_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/rag-app/data
  app_cache:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/rag-app/cache
  app_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/rag-app/logs

networks:
  default:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.name: rag-network 